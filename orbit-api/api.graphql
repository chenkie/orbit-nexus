### This file was generated by Nexus Schema
### Do not make changes to this file directly


type DashboardData {
  graphData: [Sale!]
  newCustomers: Int
  refunds: Int
  salesVolume: Int
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type InventoryItem {
  id: ID
  image: String
  itemNumber: String
  name: String
  unitPrice: Float
  user: String
}

input InventoryItemCreateInput {
  id: String
  itemNumber: String!
  name: String!
  unitPrice: Float!
}

input InventoryItemWhereUniqueInput {
  id: String
}

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Mutation {
  createOneInventoryItem(data: InventoryItemCreateInput!): InventoryItem!
  deleteOneInventoryItem(where: InventoryItemWhereUniqueInput!): InventoryItem
  login(email: String!, password: String!): UserLoginResult
  signup(email: String!, firstName: String!, lastName: String!, password: String!): UserSignupResult
  updateUserBio(bio: String!): UserUpdateResult
  updateUserRole(role: String!): UserUpdateResult
}

type Query {
  dashboardData: DashboardData
  inventoryItem(where: InventoryItemWhereUniqueInput!): InventoryItem
  inventoryItems(after: InventoryItemWhereUniqueInput, before: InventoryItemWhereUniqueInput, first: Int, last: Int): [InventoryItem!]!
  user: User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

type Sale {
  amount: Int
  date: String
}

type User {
  avatar: String
  bio: String
  email: String
  firstName: String
  id: ID
  lastName: String
  password: String
  role: String
}

type UserBio {
  bio: String
}

type UserInfo {
  avatar: String
  bio: String
  email: String
  firstName: String
  id: ID
  lastName: String
  role: String
}

type UserLoginResult {
  expiresAt: String
  message: String
  token: String
  userInfo: UserInfo
}

type UserSignupResult {
  expiresAt: String
  message: String
  token: String
  userInfo: UserInfo
}

type UserUpdateResult {
  message: String
  user: UserInfo
}

input UserWhereUniqueInput {
  email: String
  id: String
}
